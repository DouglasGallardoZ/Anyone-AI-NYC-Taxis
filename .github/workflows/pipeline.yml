name: Deploy to AWS EC2
on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}
          
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin  public.ecr.aws/w4d8o1l0 
      
      - name: Build and push images
        run: |
          docker build -t taxi-api ./api
          docker tag taxi-api:latest  public.ecr.aws/w4d8o1l0/taxi-api:latest
          docker push  public.ecr.aws/w4d8o1l0/taxi-api:latest

          docker build -t taxi-ml-service ./model
          docker tag taxi-ml-service:latest  public.ecr.aws/w4d8o1l0/taxi-ml-service:latest
          docker push  public.ecr.aws/w4d8o1l0/taxi-ml-service:latest

          docker build -t taxi-ui ./ui
          docker tag taxi-ui:latest  public.ecr.aws/w4d8o1l0/taxi-ui:latest
          docker push  public.ecr.aws/w4d8o1l0/taxi-ui:latest

          docker build -t populate-db -f ./api/Dockerfile.populate ./api
          docker tag populate-db:latest  public.ecr.aws/w4d8o1l0/populate-db:latest
          docker push  public.ecr.aws/w4d8o1l0/populate-db:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Decode and store SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2-key.pem
          chmod 400 ec2-key.pem
          ls -lah ec2-key.pem
          cat ec2-key.pem
      - name: Deploy to EC2
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          # scp -i ec2-key.pem $GITHUB_WORKSPACE/dreamed-house.jar ubuntu@${{ secrets.EC2_HOST }}:~/app
          ssh -i ec2-key.pem ubuntu@${{ secrets.EC2_HOST }} 'bash -s' <<'ENDSSH'
            docker pull  public.ecr.aws/w4d8o1l0/taxi-api:latest
            docker pull  public.ecr.aws/w4d8o1l0/taxi-ml-service:latest
            docker pull  public.ecr.aws/w4d8o1l0/taxi-ui:latest
            docker pull  public.ecr.aws/w4d8o1l0/populate-db:latest
            cd ~/app
            docker-compose down
            docker-compose up -d
          ENDSSH
            
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}   